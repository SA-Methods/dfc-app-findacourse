@model DFC.App.FindACourse.ViewModels.BodyViewModel
@{
    var previousPage = Model.RequestPage - 1;
    var nextPage = Model.RequestPage + 1;

    var town = Model.SideBar.TownOrPostcode;
    var distance = Model.SideBar.DistanceValue;
    var courseType = Html.Raw(Json.Serialize(Model.SideBar.CourseType.selectedIds));
    var courseHours = Html.Raw(Json.Serialize(Model.SideBar.CourseHours.selectedIds));
    var courseStudyTime = Html.Raw(Json.Serialize(Model.SideBar.CourseStudyTime.selectedIds));
    var courseStartDate = Html.Raw(Json.Serialize(Model.SideBar.StartDate.selectedIds));
    var searchTerm = Model.CurrentSearchTerm;
}

@if (Model.Results != null)
{
    @foreach (var result in Model.Results.Courses)
    {
        <div class="govuk-!-margin-top-6">
            <h2 class="govuk-heading-m">
                <a class="govuk-link" href="gds-course-details">@result.Title</a>
            </h2>
            <p>[ DESCRIPTION TO GO HERE]</p>
            <div class="govuk-grid-row">
                <div class="govuk-grid-column-one-half">
                    <ul class="govuk-list">

                        <li>
                            <span class="govuk-secondary-colour">Start date:</span> @result.StartDate
                        </li>
                        <li>
                            <span class="govuk-secondary-colour">Cost:</span> [COST TO GO HERE]
                        </li>
                        <li>
                            <span class="govuk-secondary-colour">Provider:</span> @result.ProviderName
                        </li>

                    </ul>
                </div>
                <div class="govuk-grid-column-one-half">
                    <ul class="govuk-list">
                        <li>
                            <span class="govuk-secondary-colour">Course type:</span> @result.AttendanceMode
                        </li>
                        <li>
                            <span class="govuk-secondary-colour">Duration:</span> @result.Duration
                        </li>

                    </ul>
                </div>
            </div>
        </div>
    }
    @if (Model.Results.ResultProperties.TotalPages > 1)
    {
    <ul class="previous-next-navigation govuk-!-margin-top-3">
        @if (Model.Results.ResultProperties.Page < Model.Results.ResultProperties.TotalPages)
        {
        <li class="next">
            <a href="@Url.Action("Page", "Course", new { searchTerm = searchTerm, town = town, courseType = courseType, courseHours = courseHours, studyTime = courseStudyTime, startDate = courseStartDate, distance = distance, page = nextPage })">
                <span class="pagination-label">Next</span>
                <span class="govuk-visually-hidden">page</span>
                <span class="page-numbers">@nextPage of @Model.Results.ResultProperties.TotalPages</span>
            </a>
        </li>
        }

        @if (Model.Results.ResultProperties.Page > 1)
        {
            <li class="previous">
                <a href="@Url.Action("Page", "Course", new { searchTerm = searchTerm, town = town, courseType = courseType, courseHours = courseHours, studyTime = courseStudyTime, startDate = courseStartDate, distance = distance, page = previousPage })">
                    <span class="pagination-label">Previous</span>
                    <span class="govuk-visually-hidden">page</span>
                    <span class="page-numbers">@previousPage of @Model.Results.ResultProperties.TotalPages</span>
                </a>
            </li>
        }
    </ul>
    }
}